package protobufs

const (
	TypeUrlPrefix                        = "types.quilibrium.com"
	NamespacePrefix                      = TypeUrlPrefix + "/quilibrium.node."
	AppPrefix                            = NamespacePrefix + "application.pb."
	ChannelPrefix                        = NamespacePrefix + "channel.pb."
	ClockPrefix                          = NamespacePrefix + "clock.pb."
	KeysPrefix                           = NamespacePrefix + "keys.pb."
	CeremonyPrefix                       = NamespacePrefix + "ceremony.pb."
	NodePrefix                           = NamespacePrefix + "node.pb"
	CeremonyTranscriptType               = CeremonyPrefix + "CeremonyTranscript"
	CeremonyLobbyStateType               = CeremonyPrefix + "CeremonyLobbyState"
	CeremonySeenProverAttestationType    = CeremonyPrefix + "CeremonySeenProverAttestation"
	CeremonyDroppedProverAttestationType = CeremonyPrefix + "CeremonyDroppedProverAttestation"
	CeremonyTranscriptShareType          = CeremonyPrefix + "CeremonyTranscriptShare"
	CeremonyTranscriptCommitType         = CeremonyPrefix + "CeremonyTranscriptCommit"
	CeremonyAdvanceRoundType             = CeremonyPrefix + "CeremonyAdvanceRound"
	CeremonyLobbyJoinType                = CeremonyPrefix + "CeremonyLobbyJoin"
	CeremonyLobbyStateTransitionType     = CeremonyPrefix + "CeremonyLobbyStateTransition"
	CeremonyOpenStateType                = CeremonyPrefix + "CeremonyOpenState"
	CeremonyInProgressStateType          = CeremonyPrefix + "CeremonyInProgressState"
	CeremonyFinalizingStateType          = CeremonyPrefix + "CeremonyFinalizingState"
	CeremonyValidatingStateType          = CeremonyPrefix + "CeremonyValidatingState"
	CeremonyPeerListAnnounceType         = CeremonyPrefix + "CeremonyPeerListAnnounce"
	CeremonyPeerType                     = CeremonyPrefix + "CeremonyPeer"
	CeremonyCompressedSyncType           = CeremonyPrefix + "CeremonyCompressedSync"
	InclusionProofsMapType               = CeremonyPrefix + "InclusionProofsMap"
	InclusionSegmentsMapType             = CeremonyPrefix + "InclusionSegmentsMap"
	InclusionCommitmentsMapType          = CeremonyPrefix + "InclusionCommitmentsMap"
	ApplicationType                      = AppPrefix + "Application"
	ExecutionContextType                 = AppPrefix + "ExecutionContext"
	MessageType                          = AppPrefix + "Message"
	IntrinsicExecutionOutputType         = AppPrefix + "IntrinsicExecutionOutput"
	P2PChannelEnvelopeType               = ChannelPrefix + "P2PChannelEnvelope"
	MessageCiphertextType                = ChannelPrefix + "MessageCiphertext"
	ProvingKeyAnnouncementType           = ChannelPrefix + "ProvingKeyAnnouncement"
	ProvingKeyRequestType                = ChannelPrefix + "ProvingKeyRequest"
	InclusionAggregateProofType          = ChannelPrefix + "InclusionAggregateProof"
	InclusionCommitmentType              = ChannelPrefix + "InclusionCommitment"
	KeyBundleAnnouncementType            = ChannelPrefix + "KeyBundleAnnouncement"
	IdentityKeyType                      = ChannelPrefix + "IdentityKey"
	SignedPreKeyType                     = ChannelPrefix + "SignedPreKey"
	ClockFrameType                       = ClockPrefix + "ClockFrame"
	ClockFramesRequestType               = ClockPrefix + "ClockFramesRequest"
	ClockFramesResponseType              = ClockPrefix + "ClockFramesResponse"
	Ed448PublicKeyType                   = KeysPrefix + "Ed448PublicKey"
	Ed448PrivateKeyType                  = KeysPrefix + "Ed448PrivateKey"
	Ed448SignatureType                   = KeysPrefix + "Ed448Signature"
	X448PublicKeyType                    = KeysPrefix + "X448PublicKey"
	X448PrivateKeyType                   = KeysPrefix + "X448PrivateKey"
	PCASPublicKeyType                    = KeysPrefix + "PCASPublicKey"
	PCASPrivateKeyType                   = KeysPrefix + "PCASPrivateKey"
	BLS48581G1PublicKeyType              = KeysPrefix + "BLS48581G1PublicKey"
	BLS48581G1PrivateKeyType             = KeysPrefix + "BLS48581G1PrivateKey"
	BLS48581G2PublicKeyType              = KeysPrefix + "BLS48581G2PublicKey"
	BLS48581G2PrivateKeyType             = KeysPrefix + "BLS48581G2PrivateKey"
	SelfTestReportType                   = NodePrefix + "SelfTestReport"
)
